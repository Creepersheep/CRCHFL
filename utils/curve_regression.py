import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

epoch =[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
loss = [1.853258729, 1.76964581, 1.784315228, 1.750964761, 1.567705035, 1.654166698, 1.470093489, 1.3362602, 1.28441143, 1.349730849, 1.150846362, 1.061595082, 1.130332232, 1.033548355, 1.057714343, 0.995010316, 1.06848228, 0.930660307, 0.908592582, 0.866158068, 0.84840703, 0.844695747, 0.832722008, 0.832242072, 0.842059791, 0.814491153, 0.814535797, 0.8365345, 0.827394605, 0.800399959, 0.794475377, 0.795884371, 0.797051728, 0.750152826, 0.75721699, 0.764646113, 0.76763773, 0.75791198, 0.751613081, 0.756779253]

def curve(x, a, b):
    return a * x ** (-b)

def main():
    plt.plot(epoch, loss, 'b-', label='data')

    popt, pcov = curve_fit(curve, epoch, loss)
    plt.plot(epoch, curve(epoch, *popt), 'r-',
         label='fit: a=%5.3f, b=%5.3f' % tuple(popt))

    plt.xlabel('epoch')
    plt.ylabel('loss')
    plt.legend()
    plt.show()

if __name__ == '__main__':
    main()
